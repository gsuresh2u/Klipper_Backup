# This file contains a configuration snippet for DISABLE_CARRIAGE 
#  printer using dual carriages (an "IDEX" printer).
#
# See docs/Config_Reference.md for a description of parameters.
#
#####################################################################
#  IDEX DISABLE CARRIAGES MOVMENT MODES MANAGEMENT
# Function description: 
#####################################################################
#  macro uses variable:
#
#  printer["gcode_macro VARIABLE"].tool_change
#  printer["gcode_macro VARIABLE"].idex_mode 
#  printer["gcode_macro VARIABLE"].toolhead
#  printer["gcode_macro VARIABLE"].dual_carriage
#  printer["gcode_macro VARIABLE"].fan
#  
#####################################################################

[gcode_macro ACTUAL_CARRIAGE_OFFSET]
gcode:

    {% set user_vars = printer["gcode_macro VARIABLE"] %}   
    {% set axis = 0 if printer.configfile.settings.dual_carriage.axis == 'x' else 1 %} 
    
    ### init mode position crriage 0    
    {% set init_pos_car0 = printer['dual_carriage'].init_mode_positions[0][axis|int] %}
    ### init mode position crriage 1
    {% set init_pos_car1 = printer['dual_carriage'].init_mode_positions[1][axis|int] %}
    
    ### actual carriage offset
    {% set act_carriage_offset = init_pos_car1 - init_pos_car0 %}
    
    ### update  variable
    {% set _dummy =user_vars.idex_mode.update( {'carriage_offset' : act_carriage_offset } ) %}  
    SET_GCODE_VARIABLE  MACRO=VARIABLE  VARIABLE=idex_mode  VALUE="{user_vars.idex_mode}"  
 
#####################################################################
  
[gcode_macro SET_CARRIAGE_OFFSET]
gcode: 
      
     {% set axis = printer.configfile.settings.dual_carriage.axis %}      
     SET_GCODE_OFFSET {axis}={printer["gcode_macro VARIABLE"].idex_mode.carriage_offset}   


#####################################################################

[gcode_macro DISABLE_CARRIAGE_0]
description: Disable carriage 0 in mode "DUPLICATION"  or "MIRRORED".
gcode:

  {% set user_vars = printer["gcode_macro VARIABLE"] %} 

 {% if user_vars.tool_change.enable %}
   {% set axis = printer.configfile.settings.dual_carriage.axis %}
   {% set fan_carriage = printer["gcode_macro VARIABLE"].fan.index %}
  
 
 {% if user_vars.idex_mode.active in [2,3] %} 
 
  {% if user_vars.idex_mode.active == 2 %}
   ### DUPLICATION mode with parking carriage 0
    SAVE_GCODE_STATE name=park_carriage
    SET_DUAL_CARRIAGE CARRIAGE=0 
   ### save carriage position
    ACTUAL_CARRIAGE_OFFSET 
    SYNC_EXTRUDER_MOTION EXTRUDER={user_vars.toolhead[0][0]} MOTION_QUEUE= 
   ### parking carriage 0 to endstop position    
    G1 {axis + (printer.configfile.config[('stepper_'+axis)].position_endstop)} F{user_vars.dual_carriage.feedrate}  
   ### restore carriage 1 in DUPLICATION mode      
    SET_DUAL_CARRIAGE CARRIAGE=1   
    RESTORE_GCODE_STATE name=park_carriage 
   ### set carriage offset
    SET_CARRIAGE_OFFSET  
    
  {% elif user_vars.idex_mode.active == 3 %}
   ### "MIRRORED" MODE ### 
   ### disable only extruder carriage 0    
    SYNC_EXTRUDER_MOTION EXTRUDER={user_vars.toolhead[0][0]} MOTION_QUEUE=
     

  {% endif %} 

    ### off print fan carriage 0     
    SET_FAN_SPEED FAN={fan_carriage[0]} SPEED=0 
   
    ### off heater on carriage 0 
    {% for tool in user_vars.toolhead.0 %}
      {% set heater = tool.lstrip("extruder") if tool.lstrip("extruder")|length != 0 else 0 %}
      M104 S0 T{heater|int} 
    {% endfor %}

   ### reset defautl tool for extruder
    _A_INIT_TOOL
   
   ### update  variable
   {% set _dummy = user_vars.tool_change.update( {'enable' : False } ) %}  
   SET_GCODE_VARIABLE  MACRO=VARIABLE  VARIABLE=tool_change  VALUE="{user_vars.tool_change}"  
 
 {% else %}
    RESPOND TYPE="error" MSG="Disable carriage only in DUPLICTION or MIRRORED Idex modes."
 {% endif %}  
  {% endif %}   
 

#####################################################################

[gcode_macro DISABLE_CARRIAGE_1]
description: Disable carriage 1 in mode "DUPLICATION"  or "MIRRORED".
gcode:
 
  {% set user_vars = printer["gcode_macro VARIABLE"] %} 
 
 {% if user_vars.tool_change.enable %}
   {% set axis = printer.configfile.settings.dual_carriage.axis %}   
   {% set fan_carriage = printer["gcode_macro VARIABLE"].fan.index %}
  
 {% if user_vars.idex_mode.active in [2,3] %} 
   SAVE_GCODE_STATE name=park_carriage
   SET_DUAL_CARRIAGE CARRIAGE=0 
   SYNC_EXTRUDER_MOTION EXTRUDER={user_vars.toolhead[1][0]} MOTION_QUEUE=
  
  ### --- parking carriage 1 to endstop position ---  
   SET_DUAL_CARRIAGE CARRIAGE=1          
   G1 {axis + (printer.configfile.config[('dual_carriage')].position_endstop)} F{user_vars.dual_carriage.feedrate}     
  ### --- restore carriage 0 ---     
   SET_DUAL_CARRIAGE CARRIAGE=0 
   RESTORE_GCODE_STATE name=park_carriage 
   SET_GCODE_OFFSET {axis}=0 

  ### off print fan carriage 1  
   SET_FAN_SPEED FAN={fan_carriage[1]} SPEED=0

  ### off heater on carriage 1 
   {% for tool in user_vars.toolhead.1 %}
      {% set heater = tool.lstrip("extruder") if tool.lstrip("extruder")|length != 0 else 0 %}
      M104 S0 T{heater|int} 
    {% endfor %}

  ### reset defautl tool for extruder
  _A_INIT_TOOL  
 
  ### update  variable
  {% set _dummy = user_vars.tool_change.update( {'enable' : False } ) %}  
  SET_GCODE_VARIABLE  MACRO=VARIABLE  VARIABLE=tool_change  VALUE="{user_vars.tool_change}"  
   
 {% else %}
    RESPOND TYPE="error" MSG="Disable carriage only in DUPLICTION or MIRRORED Idex modes."
 {% endif %} 
   
 
 {% endif %} 